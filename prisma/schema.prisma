
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model User{
  id        String   @id @default(uuid())  
  username  String   @unique
  password  String   
  name String?
  posts     Post[]   // One user can create many posts 
  likes     Like[]   // One user can get multiple likes
  comments  Comment[] //one user can add multiple comments
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  likes     Like[]
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id       String @id @default(uuid())
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  post     Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   String
  createdAt DateTime @default(now())

  @@unique([userId, postId])  // Ensures one like per user per post
  
}

model Comment {
  id       String   @id @default(uuid())
  text     String
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  post     Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}